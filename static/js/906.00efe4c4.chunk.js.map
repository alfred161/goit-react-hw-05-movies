{"version":3,"file":"static/js/906.00efe4c4.chunk.js","mappings":"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","sources":["api/api.js","components/MovieListComponent/MovieListComponent.module.css","webpack://goit-react-hw-05-movies/./src/components/MovieListItemComponent/MovieListItemComponent.module.css?0495","components/MovieListItemComponent/MovieListItemComponent.jsx","components/MovieListComponent/MovieListComponent.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'dd6550ecf9adce48a233515c99fe191a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByName = async name => {\n  const response = await axios.get(`search/movie?query=${name}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieListItemComponent_movieItem__MmPt7\",\"movieItemTitle\":\"MovieListItemComponent_movieItemTitle__SynR8\"};","import PropTypes from 'prop-types';\nimport css from './MovieListItemComponent.module.css';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieListItemComponent = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <li className={css.movieItem} key={id}>\n        <Link\n          to={`/movies/${id}`}\n          state={{\n            from: location,\n            movieTitle: { title },\n          }}\n          className={css.movieLink}\n        >\n          <h4 className={css.movieItemTitle}>{title}</h4>\n        </Link>\n      </li>\n    </>\n  );\n};\n\nMovieListItemComponent.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport css from './MovieListComponent.module.css';\nimport { MovieListItemComponent } from 'components/MovieListItemComponent/MovieListItemComponent';\n\nexport const MovieListComponent = ({ movies }) => {\n  return (\n    <>\n      {movies ? (\n        <ul className={css.movieList}>\n          {movies.map(({ id, title }) => (\n            <MovieListItemComponent key={id} id={id} title={title} />\n          ))}\n        </ul>\n      ) : (\n        <p>Movie not found.</p>\n      )}\n    </>\n  );\n};\n\nMovieListComponent.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"MoviesPage_inputWrapper__5Pth3\",\"input\":\"MoviesPage_input__16dJ5\",\"loading\":\"MoviesPage_loading__+eW3h\"};","import { fetchMovieByName } from 'api/api';\nimport { MovieListComponent } from 'components/MovieListComponent/MovieListComponent';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Outlet,\n  // useNavigate,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieName) return;\n      setIsLoading(true);\n\n      try {\n        const movies = await fetchMovieByName(movieName);\n        if (movies.length === 0) {\n          Notify.failure(`Sorry, there are no movies available by that name.`);\n        }\n\n        setMovies(movies);\n      } catch (error) {\n        Notify.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieName]);\n\n  return (\n    <>\n      {!movieId && (\n        <div className={css.inputWrapper}>\n          <input\n            type=\"text\"\n            className={css.input}\n            onChange={e => updateQueryString(e.target.value)}\n            placeholder=\"Search movies...\"\n            autoFocus\n          />\n        </div>\n      )}\n\n      {!movieId &&\n        (isLoading ? <Loader /> : <MovieListComponent movies={movies} />)}\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByName","_ref2","_callee2","name","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","MovieListItemComponent","id","title","location","useLocation","_jsx","_Fragment","children","className","css","Link","to","state","from","movieTitle","MovieListComponent","movies","map","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","isLoading","setIsLoading","useParams","useEffect","fetchMovies","_movies","length","Notify","t0","finish","_jsxs","type","onChange","e","query","target","value","placeholder","autoFocus","Loader","Outlet"],"sourceRoot":""}